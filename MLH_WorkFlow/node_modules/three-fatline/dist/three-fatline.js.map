{"version":3,"file":"three-fatline.js","sources":["../src/LineSegmentsGeometry.js","../src/LineMaterial.js","../src/LineSegments2.js","../src/LineGeometry.js","../src/Line2.js"],"sourcesContent":["import {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n};\n\n// support multiple method names for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nconst _box = new THREE.Box3();\n\nconst _vector = new THREE.Vector3();\n\nclass LineSegmentsGeometry extends THREE.InstancedBufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineSegmentsGeometry';\n\t\tconst positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\t\tconst uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\t\tconst index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\t\tthis.setIndex( index );\n\t\tthis[setAttributeFn]( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tthis[setAttributeFn]( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\t\t\tend.applyMatrix4( matrix );\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\tlet lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis[setAttributeFn]( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\n\t\tthis[setAttributeFn]( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\tlet colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis[setAttributeFn]( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\n\t\tthis[setAttributeFn]( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t}\n\n\tfromWireframeGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\t\treturn this;\n\n\t}\n\n\tfromEdgesGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\t\treturn this;\n\n\t}\n\n\tfromMesh( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) ); // set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tfromLineSegments( lineSegments ) {\n\n\t\tconst geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t} // set colors, maybe\n\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t_box.setFromBufferAttribute( end );\n\n\t\t\tthis.boundingBox.union( _box );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t}\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tconst center = this.boundingSphere.center;\n\t\t\tthis.boundingBox.getCenter( center );\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( start, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t_vector.fromBufferAttribute( end, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() { // todo\n\t}\n\n\tapplyMatrix( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n}\n\nLineSegmentsGeometry.prototype.isLineSegmentsGeometry = true;\n\nexport default LineSegmentsGeometry;\n","/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n};\n\nTHREE.UniformsLib.line = {\n\t\tworldUnits: {\n\t\t\tvalue: 1\n\t\t},\n\t\tlinewidth: {\n\t\t\tvalue: 1\n\t\t},\n\t\tresolution: {\n\t\t\tvalue: new THREE.Vector2( 1, 1 )\n\t\t},\n\t\tdashScale: {\n\t\t\tvalue: 1\n\t\t},\n\t\tdashSize: {\n\t\t\tvalue: 1\n\t\t},\n\t\tdashOffset: {\n\t\t\tvalue: 0\n\t\t},\n\t\tgapSize: {\n\t\t\tvalue: 1\n\t\t} // todo FIX - maybe change to totalSize\n\n};\nTHREE.ShaderLib[ 'line' ] = {\n\t\tuniforms: THREE.UniformsUtils.merge( [ THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.line ] ),\n\tvertexShader:\n\t/* glsl */\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\tworldStart = start.xyz;\n\t\t\tworldEnd = end.xyz;\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segements overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\tfragmentShader:\n\t/* glsl */\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nclass LineMaterial extends THREE.ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\t\t\ttype: 'LineMaterial',\n\t\t\tuniforms: THREE.UniformsUtils.clone( THREE.ShaderLib[ 'line' ].uniforms ),\n\t\t\tvertexShader: THREE.ShaderLib[ 'line' ].vertexShader,\n\t\t\tfragmentShader: THREE.ShaderLib[ 'line' ].fragmentShader,\n\t\t\tclipping: true // required for clipping support\n\n\t\t} );\n\t\tObject.defineProperties( this, {\n\t\t\tcolor: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tworldUnits: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn 'WORLD_UNITS' in this.defines;\n\n\t\t\t\t\t},\n\t\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\t\tthis.defines.WORLD_UNITS = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.WORLD_UNITS;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tlinewidth: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashed: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn Boolean( 'USE_DASH' in this.defines );\n\n\t\t\t\t},\n\n\t\t\t\tset( value ) {\n\n\t\t\t\t\tif ( Boolean( value ) !== Boolean( 'USE_DASH' in this.defines ) ) {\n\n\t\t\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\tthis.defines.USE_DASH = '';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.USE_DASH;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tdashScale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashSize: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashOffset: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tgapSize: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tresolution: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t\t}\n\t\t\t},\n\t\t\talphaToCoverage: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn Boolean( 'ALPHA_TO_COVERAGE' in this.defines );\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( Boolean( value ) !== Boolean( 'ALPHA_TO_COVERAGE' in this.defines ) ) {\n\n\t\t\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\tthis.defines.ALPHA_TO_COVERAGE = '';\n\t\t\t\t\t\tthis.extensions.derivatives = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.ALPHA_TO_COVERAGE;\n\t\t\t\t\t\tthis.extensions.derivatives = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport default LineMaterial;\n","import {\n\tBox3,\n\tBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tSphere,\n\tVector3,\n\tVector4\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\t\tBox3,\n\t\tBufferGeometry,\n\t\tInstancedInterleavedBuffer,\n\t\tInterleavedBufferAttribute,\n\t\tLine3,\n\t\tMathUtils,\n\t\tMatrix4,\n\t\tMesh,\n\t\tSphere,\n\t\tVector3,\n\t\tVector4\n\t};\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nconst _start = new THREE.Vector3();\n\nconst _end = new THREE.Vector3();\n\nconst _start4 = new THREE.Vector4();\n\nconst _end4 = new THREE.Vector4();\n\nconst _ssOrigin = new THREE.Vector4();\n\nconst _ssOrigin3 = new THREE.Vector3();\n\nconst _mvMatrix = new THREE.Matrix4();\n\nconst _line = new THREE.Line3();\n\nconst _closestPoint = new THREE.Vector3();\n\nconst _box = new THREE.Box3();\n\nconst _sphere = new THREE.Sphere();\n\nconst _clipToWorldVector = new THREE.Vector4();\n\nclass LineSegments2 extends THREE.Mesh {\n\n\tconstructor( geometry = new LineSegmentsGeometry(), material = new LineMaterial( {\n\t\tcolor: Math.random() * 0xffffff\n\t} ) ) {\n\n\t\tsuper( geometry, material );\n\t\tthis.type = 'LineSegments2';\n\n\t} // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd;\n\t\tconst lineDistances = new Float32Array( 2 * instanceStart.count );\n\n\t\tfor ( let i = 0, j = 0, l = instanceStart.count; i < l; i ++, j += 2 ) {\n\n\t\t\t_start.fromBufferAttribute( instanceStart, i );\n\n\t\t\t_end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\tlineDistances[ j ] = j === 0 ? 0 : lineDistances[ j - 1 ];\n\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + _start.distanceTo( _end );\n\n\t\t}\n\n\t\tconst instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\tgeometry[setAttributeFn]( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\n\t\tgeometry[setAttributeFn]( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t}\n\n\t\tconst threshold = raycaster.params.Line2 !== undefined ? raycaster.params.Line2.threshold || 0 : 0;\n\t\tconst ray = raycaster.ray;\n\t\tconst camera = raycaster.camera;\n\t\tconst projectionMatrix = camera.projectionMatrix;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst resolution = material.resolution;\n\t\tconst lineWidth = material.linewidth + threshold;\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd; // camera forward is negative\n\n\t\tconst near = - camera.near; // clip space is [ - 1, 1 ] so multiply by two to get the full\n\t\t// width in clip space\n\n\t\tconst ssMaxWidth = 2.0 * Math.max( lineWidth / resolution.width, lineWidth / resolution.height ); //\n\t\t// check if we intersect the sphere bounds\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( matrixWorld );\n\n\t\tconst distanceToSphere = Math.max( camera.near, _sphere.distanceToPoint( ray.origin ) ); // get the w component to scale the world space line width\n\n\t\t_clipToWorldVector.set( 0, 0, - distanceToSphere, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse ); // increase the sphere bounds by the worst case line screen space width\n\n\n\t\tconst sphereMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_sphere.radius += sphereMargin;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t} //\n\t\t// check if we intersect the box bounds\n\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\t_box.copy( geometry.boundingBox ).applyMatrix4( matrixWorld );\n\n\t\tconst distanceToBox = Math.max( camera.near, _box.distanceToPoint( ray.origin ) ); // get the w component to scale the world space line width\n\n\t\t_clipToWorldVector.set( 0, 0, - distanceToBox, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse ); // increase the sphere bounds by the worst case line screen space width\n\n\n\t\tconst boxMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_box.max.x += boxMargin;\n\t\t_box.max.y += boxMargin;\n\t\t_box.max.z += boxMargin;\n\t\t_box.min.x -= boxMargin;\n\t\t_box.min.y -= boxMargin;\n\t\t_box.min.z -= boxMargin;\n\n\t\tif ( raycaster.ray.intersectsBox( _box ) === false ) {\n\n\t\t\treturn;\n\n\t\t} //\n\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t// applying the projection matrix.\n\n\n\t\tray.at( 1, _ssOrigin ); // ndc space [ - 1.0, 1.0 ]\n\n\t\t_ssOrigin.w = 1;\n\n\t\t_ssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\n\t\t_ssOrigin.applyMatrix4( projectionMatrix );\n\n\t\t_ssOrigin.multiplyScalar( 1 / _ssOrigin.w ); // screen space\n\n\n\t\t_ssOrigin.x *= resolution.x / 2;\n\t\t_ssOrigin.y *= resolution.y / 2;\n\t\t_ssOrigin.z = 0;\n\n\t\t_ssOrigin3.copy( _ssOrigin );\n\n\t\t_mvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\tfor ( let i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t_start4.fromBufferAttribute( instanceStart, i );\n\n\t\t\t_end4.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t_start4.w = 1;\n\t\t\t_end4.w = 1; // camera space\n\n\t\t\t_start4.applyMatrix4( _mvMatrix );\n\n\t\t\t_end4.applyMatrix4( _mvMatrix ); // skip the segment if it's entirely behind the camera\n\n\n\t\t\tvar isBehindCameraNear = _start4.z > near && _end4.z > near;\n\n\t\t\tif ( isBehindCameraNear ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t} // trim the segment if it extends behind camera near\n\n\n\t\t\tif ( _start4.z > near ) {\n\n\t\t\t\tconst deltaDist = _start4.z - _end4.z;\n\t\t\t\tconst t = ( _start4.z - near ) / deltaDist;\n\n\t\t\t\t_start4.lerp( _end4, t );\n\n\t\t\t} else if ( _end4.z > near ) {\n\n\t\t\t\tconst deltaDist = _end4.z - _start4.z;\n\t\t\t\tconst t = ( _end4.z - near ) / deltaDist;\n\n\t\t\t\t_end4.lerp( _start4, t );\n\n\t\t\t} // clip space\n\n\n\t\t\t_start4.applyMatrix4( projectionMatrix );\n\n\t\t\t_end4.applyMatrix4( projectionMatrix ); // ndc space [ - 1.0, 1.0 ]\n\n\n\t\t\t_start4.multiplyScalar( 1 / _start4.w );\n\n\t\t\t_end4.multiplyScalar( 1 / _end4.w ); // screen space\n\n\n\t\t\t_start4.x *= resolution.x / 2;\n\t\t\t_start4.y *= resolution.y / 2;\n\t\t\t_end4.x *= resolution.x / 2;\n\t\t\t_end4.y *= resolution.y / 2; // create 2d segment\n\n\t\t\t_line.start.copy( _start4 );\n\n\t\t\t_line.start.z = 0;\n\n\t\t\t_line.end.copy( _end4 );\n\n\t\t\t_line.end.z = 0; // get closest point on ray to segment\n\n\t\t\tconst param = _line.closestPointToPointParameter( _ssOrigin3, true );\n\n\t\t\t_line.at( param, _closestPoint ); // check if the intersection point is within clip space\n\n\n\t\t\tconst zPos = THREE.MathUtils.lerp( _start4.z, _end4.z, param );\n\t\t\tconst isInClipSpace = zPos >= - 1 && zPos <= 1;\n\t\t\tconst isInside = _ssOrigin3.distanceTo( _closestPoint ) < lineWidth * 0.5;\n\n\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t_line.start.fromBufferAttribute( instanceStart, i );\n\n\t\t\t\t_line.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t_line.start.applyMatrix4( matrixWorld );\n\n\t\t\t\t_line.end.applyMatrix4( matrixWorld );\n\n\t\t\t\tconst pointOnLine = new THREE.Vector3();\n\t\t\t\tconst point = new THREE.Vector3();\n\t\t\t\tray.distanceSqToSegment( _line.start, _line.end, point, pointOnLine );\n\t\t\t\tintersects.push( {\n\t\t\t\t\tpoint: point,\n\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\t\t\t\t\tobject: this,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\tuv: null,\n\t\t\t\t\tuv2: null\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLineSegments2.prototype.LineSegments2 = true;\n\nexport default LineSegments2;","import LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\n\nclass LineGeometry extends LineSegmentsGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineGeometry';\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setPositions( points );\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setColors( colors );\n\t\treturn this;\n\n\t}\n\n\tfromLine( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t} // set colors, maybe\n\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineGeometry.prototype.isLineGeometry = true;\n\nexport default LineGeometry;\n","import LineSegments2 from \"./LineSegments2.js\";\nimport LineGeometry from \"./LineGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\nclass Line2 extends LineSegments2 {\n\n\tconstructor( geometry = new LineGeometry(), material = new LineMaterial( {\n\t\tcolor: Math.random() * 0xffffff\n\t} ) ) {\n\n\t\tsuper( geometry, material );\n\t\tthis.type = 'Line2';\n\n\t}\n\n}\n\nLine2.prototype.isLine2 = true;\n\nexport default Line2;\n"],"names":["THREE","window","Box3","BufferGeometry","Float32BufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InterleavedBufferAttribute","Sphere","Vector3","WireframeGeometry","setAttributeFn","setAttribute","_box","_vector","LineSegmentsGeometry","constructor","type","positions","uvs","index","setIndex","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegments","isGeometry","console","error","isBufferGeometry","setFromBufferAttribute","union","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","toJSON","applyMatrix","warn","prototype","isLineSegmentsGeometry","ShaderLib","ShaderMaterial","UniformsLib","UniformsUtils","Vector2","line","worldUnits","value","linewidth","resolution","dashScale","dashSize","dashOffset","gapSize","uniforms","merge","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","clone","clipping","Object","defineProperties","color","enumerable","get","diffuse","set","defines","WORLD_UNITS","dashed","Boolean","USE_DASH","opacity","copy","alphaToCoverage","ALPHA_TO_COVERAGE","extensions","derivatives","setValues","isLineMaterial","Line3","MathUtils","Matrix4","Mesh","Vector4","_start","_end","_start4","_end4","_ssOrigin","_ssOrigin3","_mvMatrix","_line","_closestPoint","_sphere","_clipToWorldVector","LineSegments2","material","random","computeLineDistances","lineDistances","j","l","distanceTo","instanceDistanceBuffer","raycast","raycaster","intersects","camera","threshold","params","Line2","ray","projectionMatrix","matrixWorld","lineWidth","near","ssMaxWidth","width","height","distanceToSphere","distanceToPoint","origin","multiplyScalar","w","projectionMatrixInverse","sphereMargin","abs","intersectsSphere","distanceToBox","boxMargin","x","y","z","min","intersectsBox","at","matrixWorldInverse","multiplyMatrices","isBehindCameraNear","deltaDist","t","lerp","param","closestPointToPointParameter","zPos","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","object","face","faceIndex","uv","uv2","LineGeometry","length","points","fromLine","isLineGeometry","isLine2"],"mappings":"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CACnHa,EAAAA,YAAY;CAEV,EAAA,CAAA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAG,CAAA;CACFC,EAAAA,cAAchG,OAAK,CAAC6E,cAAc,CAAC;GAE/C7D,WAAWA,CAAEiF,UAAU,EAAG;CAEzB,IAAA,KAAK,CAAE;CACNhF,MAAAA,IAAI,EAAE,c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"}